name: Manually deploy to selected environment
on:
  workflow_dispatch:
    inputs:
      env:
        type: string
        required: true
        description: Environment where to deploy the stack
        options:
          - dev
          - staging
        default: dev

env:
  pulumi_stack_organization: virtualfinland
  stack: ${{ github.event.inputs.env }}

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    environment: ${{ env.stack }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
      - name: Build application
        run: npm run build
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: Application_Artifact
          path: /home/runner/work/external-service-demo/public/
          retention-days: 2

  deploy:
    name: Deploy to S3
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ env.stack }}
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: Application_Artifact
          path: ./public/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Run Pulumi deployment
        uses: pulumi/action@v3
        with:
          work-dir: ./infra
          command: up
          stack-name: ${{ env.pulumi_stack_organization }}/${{ env.stack }}
          upsert: true
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

