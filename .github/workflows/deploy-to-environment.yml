name: Manually deploy to selected environment
on:
  workflow_dispatch:
    inputs:
      environment:
        description: Environment where to deploy the stack (dev, staging)
        type: environment
        required: true

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Install dependencies
        run: npm ci
      - name: auth-gw url from Pulumi
        if: ${{ inputs.environment }}
        uses: Virtual-Finland-Development/pulumi-outputs-action@v1
        id: auth-gw-url
        with:
          organization: virtualfinland
          project: authentication-gw
          stack: ${{ inputs.environment }}
          resource: endpoint
          access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: users-api url from Pulumi
        if: ${{ inputs.environment }}
        uses: Virtual-Finland-Development/pulumi-outputs-action@v1
        id: users-api-url
        with:
          organization: virtualfinland
          project: users-api
          stack: ${{ inputs.environment }}
          resource: ApplicationUrl
          access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: testbed-api url from Pulumi
        if: ${{ inputs.environment }}
        uses: Virtual-Finland-Development/pulumi-outputs-action@v1
        id: testbed-api-url
        with:
          organization: virtualfinland
          project: testbed-api
          stack: ${{ inputs.environment }}
          resource: url
          access-token: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Build application
        run: npm run build
        env:
          REACT_APP_AUTH_GW_BASE_URL: ${{ steps.auth-gw-url.outputs.resource-output }}
          REACT_APP_USERS_API_BASE_URL: ${{ steps.users-api-url.outputs.resource-output }}
          REACT_APP_TESTBED_API_BASE_URL: ${{ steps.testbed-api-url.outputs.resource-output }}
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: Application_Artifact
          path: build/
          retention-days: 1

  deploy:
    name: Deploy to S3
    needs: build-and-test
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      PULUMI_ORGANIZATION: virtualfinland
      PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: Application_Artifact
          path: ./public/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Install Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Install dependencies
        working-directory: ./infra
        run: npm ci
      - name: Select Pulumi stack
        working-directory: ./infra
        run: pulumi stack select ${{ env.PULUMI_ORGANIZATION }}/${{ inputs.environment }} --create
      - name: Set artifact path in Pulumi config
        working-directory: ./infra
        run: pulumi config set artifactPath ../public/
      - name: Deploy with Pulumi
        uses: pulumi/actions@v3
        with:
          work-dir: ./infra
          command: up
          stack-name: ${{ env.PULUMI_ORGANIZATION }}/${{ inputs.environment }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ env.PULUMI_ACCESS_TOKEN }}
      - name: Tag the deployment
        uses: Virtual-Finland-Development/automatic-release-action@v1.0
        if: ${{ inputs.environment == 'staging' }}
        with:
          environment: ${{ inputs.environment }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
